basePath: /api/v1
definitions:
  models.Address:
    properties:
      city:
        type: string
      country:
        type: string
      full:
        type: string
      postal_code:
        type: string
      state:
        type: string
      street:
        type: string
    type: object
  models.BusinessCard:
    properties:
      company_data:
        $ref: '#/definitions/models.CompanyData'
      created_at:
        type: string
      error:
        type: string
      extracted_text:
        type: string
      id:
        type: string
      images:
        items:
          $ref: '#/definitions/models.ImageData'
        type: array
      last_retry_at:
        type: string
      personal_data:
        $ref: '#/definitions/models.PersonalData'
      processed_at:
        type: string
      retry_count:
        type: integer
      status:
        type: string
    type: object
  models.BusinessCardListResponse:
    properties:
      count:
        type: integer
      data:
        items:
          $ref: '#/definitions/models.BusinessCard'
        type: array
      error:
        type: string
      success:
        type: boolean
    type: object
  models.BusinessCardResponse:
    properties:
      data:
        $ref: '#/definitions/models.BusinessCard'
      error:
        type: string
      success:
        type: boolean
    type: object
  models.CompanyData:
    properties:
      address:
        $ref: '#/definitions/models.Address'
      email:
        type: string
      industry:
        type: string
      name:
        type: string
      phone:
        type: string
      social_media:
        properties:
          facebook:
            type: string
          instagram:
            type: string
          linkedin:
            type: string
          twitter:
            type: string
        type: object
      website:
        type: string
    type: object
  models.ImageData:
    properties:
      content_type:
        type: string
      data:
        items:
          type: integer
        type: array
      file_name:
        type: string
      size:
        type: integer
      uploaded_at:
        type: string
    type: object
  models.PersonalData:
    properties:
      department:
        type: string
      email:
        type: string
      first_name:
        type: string
      full_name:
        type: string
      job_title:
        type: string
      last_name:
        type: string
      linkedin:
        type: string
      mobile:
        type: string
      phone:
        type: string
      website:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API for processing business cards using Gemini AI
  title: Business Card Reader API
  version: "1.0"
paths:
  /business-cards:
    get:
      description: Retrieve all processed business cards
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BusinessCardListResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BusinessCardListResponse'
      summary: Get all business cards
      tags:
      - business-cards
    post:
      consumes:
      - multipart/form-data
      description: Upload and process business card images using Gemini AI
      parameters:
      - description: Business card images (max 2)
        in: formData
        name: images
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BusinessCardResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.BusinessCardResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BusinessCardResponse'
      summary: Process business card images
      tags:
      - business-cards
  /business-cards/{id}:
    get:
      description: Retrieve a specific business card by its ID
      parameters:
      - description: Business Card ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BusinessCardResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.BusinessCardResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.BusinessCardResponse'
      summary: Get business card by ID
      tags:
      - business-cards
  /business-cards/{id}/retry:
    post:
      description: Retry processing a failed business card
      parameters:
      - description: Business Card ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BusinessCardResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.BusinessCardResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BusinessCardResponse'
      summary: Retry failed business card processing
      tags:
      - business-cards
  /business-cards/failed:
    get:
      description: Retrieve all failed business cards
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BusinessCardListResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.BusinessCardListResponse'
      summary: Get failed business cards
      tags:
      - business-cards
swagger: "2.0"
